creation of arraylist and adding values in list

filter {
  ruby {
    code => '
      # Declare and initialize an array
      id_list = []
      
      # Add the ID to the array
      id_list << event.get("selected_id")
      
      # Set the array to a field
      event.set("id_list", id_list)
    '
  }
}

--------------------------------------------------
if condition 
---------
filter {
  ruby {
    code => '
      if event.get("field_name") == "value"
        event.set("new_field", "new_value")
      elsif event.get("field_name") == "other_value"
        event.set("another_field", "another_value")
      else
        event.set("default_field", "default_value")
      end
    '
  }
}

----------------------------------------------------  
arraylist looping 

# Assume 'array_list' is your array list
array_list.each do |element|
  # Perform operations on 'element'
  puts "Processing element: #{element}"
end


-----------------------------------------------
condition in looping

input {
  # Your input configuration
}

filter {
  ruby {
    code => "
      # Sample array to iterate over
      data_array = ['item1', 'item2', 'item3', 'item4', 'item5']

      # Process each item in the array
      data_array.each do |item|
        # Check conditions and perform processing
        if item.start_with?('item')
          # Perform processing for items starting with 'item'
          event.set('processed_item', item)
        else
          # Perform processing for items not starting with 'item'
          event.set('skipped_item', item)
        end
      end
    "
  }
}

output {
  # Your output configuration
}

